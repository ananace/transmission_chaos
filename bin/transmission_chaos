#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'transmission_chaos'

options = {}
oparse = OptionParser.new do |opts|
  opts.banner = 'Usage: transmission_chaos URL [options]'

  opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('--cron', 'Set when running as a cron task') do
    options[:cron] = true
  end

  opts.on('--daemon', 'Run as a foreground daemon') do
    options[:daemon] = true
  end

  opts.on('--ignore-downloading', 'Ignore active torrents that are still downloading') do
    options[:ignore_downloading] = true
  end

  opts.on('-pPERC', '--percentage=PERCENT', 'Specify the target percentage of active torrents') do |perc|
    options[:target_percent] = perc.to_f
  end

  opts.on('-tTORR', '--torrents=TORRENTS', 'Specify the exact target number of active torrents') do |torr|
    options[:target_number] = torr.to_i
  end

  opts.on('-h', '--help', 'Prints this help') do
    puts opts
    exit
  end
end
oparse.parse!

url = ARGV[0]
if url.nil? || url.empty?
  puts oparse
  exit
end

TransmissionChaos.logger.level = if options[:cron]
                                   :error
                                 elsif options[:verbose]
                                   :debug
                                 else
                                   :info
                                 end

cl = TransmissionChaos::Client.new url, **options

if options[:daemon]
  cl.logger.info 'Starting Transmission Chaos keeper daemon'
  begin
    loop do
      begin
        cl.add_chaos
      rescue StandardError => e
        cl.logger.error e
      end

      sleep TransmissionChaos::Client::UPDATE_INTERVAL
    end
  rescue Interrupt
    cl.logger.info 'Interrupt received, stopping.'
  end
else
  cl.add_chaos
end
